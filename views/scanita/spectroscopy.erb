<% direction ||= @direction ||= 'Forward' %>
<h2><%= direction %></h2>	
<div class="row">
	<div class="onecol">
		<% ['Drive amplitude', 'Drive amplitude with background', 'Dissipation peaks', 'Dissipation peaks | SMOOTHED'].each do |name| %>
			<% image = sdf.images.select {|f| f.title == name && f.direction == direction}.first %>
			<% if image %>
				<%= svg_tag(image) %>
			<% end %>
		<% end %>
		
		<% L=0; ec=0 %>
		<% fits = sdf.xml.xpath("/SPM/Package/UserChannel[Name = 'Dissipation peaks' and Direction = $direction]/UserData/Fitting//peak",nil,{:direction => direction}) %>
		<% if !fits.empty? %>
		<% amplitude_dissipation = [] %>
		<table>
			<tr>
				<th>#</th>
				<th>Vo</th>
				<th>Peak amplitude</th>
				<th>alpha</th>
				<th>Ec</th>
				<th>delta Ec</th>		
			</tr>
			<% L=fits.length;0.upto(L-1).each do |i| %>
			<tr>
				<td><%=i%></td>
				<td><%=fits[i].at_xpath("V/value").content.to_f.round(3)%></td>
				<td><%=amplitude_dissipation[i]=fits[i].at_xpath("A/value").content.to_f;amplitude_dissipation[i].round(3)%></td>
				<td><%=alpha=(sdf.xml.at_xpath('/SPM/UserData/temperature').content.to_f * fits[i].at_xpath('beta/value').content.to_f); alpha.round(5) %></td>
				<% ecp = ec %>
				<td><%=ec=(fits[i].at_xpath("V/value").content.to_f * alpha*1000); ec.round(3) %> meV</td>
				<td><%= ecp==0 ? 0:(ec-ecp).round(3) %></td>
			</tr>
			<% end %>
		</table>
		<% end %>
	</div>

	<div class="onecol last">
		<% ['Frequency shift and Parabolic fit from 0-20Hz', 'Difference between Frequency shift and Parabolic fit from 0-20Hz | SMOOTHED', 'Frequency shift peaks', 'Frequency shift peaks | SMOOTHED'].each do |name| %>
			<% image = sdf.images.select {|f| f.title == name && f.direction == direction}.first %>
			<% if image %>
				<%= svg_tag(image) %>
			<% end %>
		<% end %>
		
		<% fits = sdf.xml.xpath("/SPM/Package/UserChannel[Name = 'Frequency shift peaks' and Direction = $direction]/UserData/Fitting//peak",nil,{:direction => direction}) %>
		<% if !fits.empty? %>
		<% amplitude_fshift = [] %>
		<table>
			<tr>
				<th>#</th>
				<th>V</th>
				<th>Peak amplitude</th>
				<th>alpha</th>
				<th>Ec</th>
				<th>delta Ec</th>		
			</tr>
			<% L=fits.length;0.upto(L-1).each do |i| %>
			<tr>
				<td><%=i%></td>
				<td><%=fits[i].at_xpath("V/value").content.to_f.round(3)%></td>
				<td><%=amplitude_fshift[i]=fits[i].at_xpath("A/value").content.to_f;amplitude_fshift[i].round(3)%></td>
				<td><%=alpha=(sdf.xml.at_xpath('/SPM/UserData/temperature').content.to_f * fits[i].at_xpath('beta/value').content.to_f); alpha.round(5) %></td>
				<% ecp = ec %>
				<td><%=ec=(fits[i].at_xpath("V/value").content.to_f * alpha*1000); ec.round(3) %> meV</td>
				<td><%= ecp==0 ? 0:(ec-ecp).round(3) %></td>
			</tr>
			<% end %>
		</table>
		<% end %>
	</div>
</div>

<% if (L > 0 && amplitude_fshift && amplitude_dissipation) %>
	<div class="row">
		<div class="twocol">
		<table style="margin:10px auto;width:50%;">
			<tr>
				<th>#</th>
				<th>Tunneling rate (Hz)</th>
			</tr>
			<% 0.upto(L-1).each do |i| %>
			<tr>
				<td><%=i%></td>
				<td><%=(2*(sdf.xml.at_xpath('/SPM/UserData/cantilever/resonancefrequency').content.to_f*2*Math::PI)*amplitude_fshift[i]/amplitude_dissipation[i]).round(0); %>
			</tr>
		<% end %>
		</table>
		</div>
		
		<div class="twocol">
			<div style="width:800px;margin:0 auto">
			<% name = 'Inverse tunneling rate' %>
			<% image = sdf.images.select {|f| f.title == name && f.direction == direction}.first %>
			<% if image %>
				<%= svg_tag(image) %>
			<% end %>
			</div>
		</div>
	</div>
<% end %>
